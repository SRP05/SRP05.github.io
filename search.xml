<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>A+B 输入输出练习I</title>
    <url>/2020/11/26/A-B-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0I/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>你的任务是计算a+b。这是为了acm初学者专门设计的题目。你肯定发现还有其他题目跟这道题的标题类似，这些问题也都是专门为初学者提供的。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入包含一系列的a和b对，通过空格隔开。一对a和b占一行。</p>
<p><strong><em>输出格式：</em></strong><br>对于输入的每对a和b，你需要依次输出a、b的和。<br>如对于输入中的第二对a和b，在输出中它们的和应该也在第二行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1 5<br>10 20</p>
<p><strong><em>输出样例：</em></strong><br>6<br>30</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>黑盒测试</tag>
      </tags>
  </entry>
  <entry>
    <title>A+B 输入输出练习III</title>
    <url>/2020/11/26/A-B-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0III/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>你的任务是计算a+b。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入中每行是一对a和b。其中会有一对是0和0标志着输入结束，且这一对不要计算。</p>
<p><strong><em>输出格式：</em></strong><br>对于输入的每对a和b，你需要在相应的行输出a、b的和。<br>如第二对a和b，他们的和也输出在第二行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1 5<br>10 20<br>0 0</p>
<p><strong><em>输出样例：</em></strong><br>6<br>30</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line">include&lt;cstdio&gt; <span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="keyword">while</span> (scanf(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b), a || b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b);</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>黑盒测试</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言11.4</title>
    <url>/2021/04/14/C%E8%AF%AD%E8%A8%8011-4/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>设有若干个人员的数据，其中包含学生和教师。学生的数据中包括：号码、姓名、性别、职业、班级。教师的数据包括：号码、姓名、性别、职业、职务。可以看出，学生和教师所包含的数据是不同的。现在要求把这些数据放在同一个表格中储存，使用结构体中的共用体实现。结构体定义如下： </p>
<figure class="highlight crystal"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> &#123;</span></span><br><span class="line">    int num;</span><br><span class="line">    char name[<span class="number">10</span>];</span><br><span class="line">    char sex;</span><br><span class="line">    char job;</span><br><span class="line">    <span class="class"><span class="keyword">union</span> &#123;</span></span><br><span class="line">        int <span class="class"><span class="keyword">class</span>;</span></span><br><span class="line">        char position[<span class="number">10</span>];</span><br><span class="line">    &#125;category;</span><br><span class="line">&#125;;  </span><br></pre></td></tr></table></figure>
<p>在以上的结构体中，如果job项为s（学生），则第5项为class（班级）；如果job项是t（教师），则第5项为position（职务）。<br>输入几个人员的数据，将其保存在以上包含共用体的结构体数组中，并输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>第一行有一个整数n，表示以下n行分别表示n个人员的数据。保证n不超过100。<br>之后的n行，每行有5项用空格隔开的内容。前4项分别为人员的号码（整数）、姓名（长度不超过9的无空格字符串）、性别（字符，m或f）和职业（字符，s或t）。如果第4项是s，则第5项为一个整数，表示班级；如果第4项是t，则第5项为一个长度不超过9的无空格字符串，表示职务。</p>
<p><strong><em>输出格式：</em></strong><br>共有n行，与输入格式相同，输出读入的所有内容。<br>请注意行尾输出换行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>2<br>101 Li f s 501<br>102 Wang m t prof</p>
<p><strong><em>输出样例：</em></strong><br>101 Li f s 501<br>102 Wang m t prof</p>
<hr>
<p><strong><em>train of thought：</em></strong>  </p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">m</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> num;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">char</span> sex;</span><br><span class="line">    <span class="keyword">char</span> job;</span><br><span class="line">    <span class="keyword">union</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">int</span> clas;</span><br><span class="line">        <span class="keyword">char</span> <span class="built_in">position</span>[<span class="number">10</span>];</span><br><span class="line">    &#125; category;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    m a[n];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %c&quot;</span>, &amp;a[i].num, &amp;a[i].name, &amp;a[i].sex);</span><br><span class="line">        <span class="keyword">char</span> n = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">        <span class="comment">//getchar();</span></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot; %c&quot;</span>, &amp;n);</span><br><span class="line">        <span class="keyword">if</span> (n == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i].job = n;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i].category.clas);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i].job = n;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;a[i].category.<span class="built_in">position</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d %s %c %c &quot;</span>, a[i].num, a[i].name, a[i].sex, a[i].job);</span><br><span class="line">        <span class="keyword">if</span> (a[i].job == <span class="string">&#x27;s&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i].category.clas);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%s\n&quot;</span>, a[i].category.<span class="built_in">position</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>结构体（struct)的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>A+B 输入输出练习II</title>
    <url>/2020/11/26/A-B-%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E7%BB%83%E4%B9%A0II/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>你的任务是计算a+b。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>第一行是一个整数N，表示后面会有N行a和b，通过空格隔开。</p>
<p><strong><em>输出格式：</em></strong><br>对于输入的每对a和b，你需要在相应的行输出a、b的和。<br>如第二对a和b，对应的和也输出在第二行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>2<br>1 5<br>10 20</p>
<p><strong><em>输出样例：</em></strong><br>6<br>30</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b, T;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;T);</span><br><span class="line">    <span class="keyword">while</span> (T--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a + b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>黑盒测试</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/15/hello-world%20-%20Copy/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a> 

<h2 id="Hello-Hexo111225"><a href="#Hello-Hexo111225" class="headerlink" title="Hello Hexo111225"></a>Hello Hexo111225</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2020/10/15/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<a id="more"></a> 

<h2 id="Hello-Hexo"><a href="#Hello-Hexo" class="headerlink" title="Hello Hexo"></a>Hello Hexo</h2><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
      <categories>
        <category>Hello World</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>C语言11.1</title>
    <url>/2020/11/26/C%E8%AF%AD%E8%A8%8011.1/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>完成一个对候选人得票的统计程序。假设有3个候选人，名字分别为Li，Zhang和Fun。使用结构体存储每一个候选人的名字和得票数。记录每一张选票的得票人名，输出每个候选人最终的得票数。结构体可以定义成如下的格式：  </p>
<figure class="highlight lsl"><table><tr><td class="code"><pre><span class="line">struct person &#123;</span><br><span class="line">    char name[<span class="number">20</span>];</span><br><span class="line">    int count;</span><br><span class="line">&#125;leader[<span class="number">3</span>] = &#123;<span class="string">&quot;Li&quot;</span>, <span class="number">0</span>,<span class="string">&quot;Zhang&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Fun&quot;</span>, <span class="number">0</span>&#125;;  </span><br></pre></td></tr></table></figure>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>第一行有一个整数n，表示以下有n张选票信息将会输入。保证n不大于100。<br>以后的n行中，每一行包含一个人名，为选票的得票人。保证每一个人名都是Li，Zhang和Fun中的某一个。</p>
<p><strong><em>输出格式：</em></strong><br>有三行，分别为Li，Zhang和Fun每人的得票数。格式为首先输出人名，其后输出一个冒号，最后输出候选人的得票数。<br>请注意行尾输出换行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>10<br>Li<br>Li<br>Fun<br>Zhang<br>Zhang<br>Fun<br>Li<br>Fun<br>Zhang<br>Li</p>
<p><strong><em>输出样例：</em></strong><br>Li:4<br>Zhang:3<br>Fun:3</p>
<hr>
<p><strong><em>train of thought：</em></strong>  </p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight sqf"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line">struct person</span><br><span class="line">&#123;</span><br><span class="line">    char <span class="built_in">name</span>[<span class="number">20</span>];</span><br><span class="line">    int <span class="built_in">count</span>;</span><br><span class="line">&#125; <span class="built_in">leader</span>[<span class="number">3</span>] = &#123;<span class="string">&quot;Li&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Zhang&quot;</span>, <span class="number">0</span>, <span class="string">&quot;Fun&quot;</span>, <span class="number">0</span>&#125;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n;</span><br><span class="line">    char a[<span class="number">20</span>];</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        scanf(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">        <span class="keyword">if</span> (strcmp(a, <span class="built_in">leader</span>[<span class="number">0</span>].<span class="built_in">name</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">leader</span>[<span class="number">0</span>].<span class="built_in">count</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (strcmp(a, <span class="built_in">leader</span>[<span class="number">1</span>].<span class="built_in">name</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">leader</span>[<span class="number">1</span>].<span class="built_in">count</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">leader</span>[<span class="number">2</span>].<span class="built_in">count</span>++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (int i = <span class="number">0</span>; i &lt; <span class="number">3</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;%s:%d\n&quot;</span>, <span class="built_in">leader</span>[i].<span class="built_in">name</span>, <span class="built_in">leader</span>[i].<span class="built_in">count</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>结构体(struct)的使用</tag>
      </tags>
  </entry>
  <entry>
    <title>八进制</title>
    <url>/2020/11/27/%E5%85%AB%E8%BF%9B%E5%88%B6/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入一个整数，将其转换成八进制数输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入包括一个整数N(0&lt;=N&lt;=100000)。</p>
<p><strong><em>输出格式：</em></strong><br>可能有多组测试数据，对于每组数据，<br>输出N的八进制表示数。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>9<br>8<br>5</p>
<p><strong><em>输出样例：</em></strong><br>11<br>10<br>5</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">int</span> z[<span class="number">10000000</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">    &#123;</span><br><span class="line">        z[k++] = n % <span class="number">8</span>;</span><br><span class="line">        n = n / <span class="number">8</span>;</span><br><span class="line">    &#125; <span class="keyword">while</span> (n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, z[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>进制转换</tag>
      </tags>
  </entry>
  <entry>
    <title>【字符串】回文串</title>
    <url>/2020/11/27/%E3%80%90%E5%AD%97%E7%AC%A6%E4%B8%B2%E3%80%91%E5%9B%9E%E6%96%87%E4%B8%B2/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>读入一串字符，判断是否是回文串。“回文串”是一个正读和反读都一样的字符串，比如“level”或者“noon”等等就是回文串。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>一行字符串，长度不超过255。</p>
<p><strong><em>输出格式：</em></strong><br>如果是回文串，输出“YES”，否则输出“NO”。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>12321</p>
<p><strong><em>输出样例：</em></strong><br>YES</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a) / <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] != a[<span class="built_in">strlen</span>(a) - <span class="number">1</span> - i])</span><br><span class="line">        &#123;</span><br><span class="line">            k = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            k = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (k == <span class="number">1</span>)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;YEs\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>字符串处理</tag>
      </tags>
  </entry>
  <entry>
    <title>复制字符串中的元音字母</title>
    <url>/2020/11/27/%E5%A4%8D%E5%88%B6%E5%AD%97%E7%AC%A6%E4%B8%B2%E4%B8%AD%E7%9A%84%E5%85%83%E9%9F%B3%E5%AD%97%E6%AF%8D/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>写一个函数，将一个字符串中的元音字母复制到另一个字符串中。在主函数中输入一个字符串，通过调用该函数，得到一个有该字符串中的元音字母组成的一个字符串，并输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>一个字符串（一行字符）。</p>
<p><strong><em>输出格式：</em></strong><br>该字符串所有元音字母构成的字符串。行尾换行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>CLanguage</p>
<p><strong><em>输出样例：</em></strong><br>auae</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> MAXN = <span class="number">1000000</span>;</span><br><span class="line"><span class="keyword">char</span> a[MAXN], b[MAXN];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">vowels</span><span class="params">(<span class="keyword">char</span> s1[], <span class="keyword">char</span> s2[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> k = <span class="built_in">strlen</span>(s1);</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (s1[i] == <span class="string">&#x27;a&#x27;</span> || s1[i] == <span class="string">&#x27;o&#x27;</span> || s1[i] == <span class="string">&#x27;e&#x27;</span> || s1[i] == <span class="string">&#x27;i&#x27;</span> || s1[i] == <span class="string">&#x27;u&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s2[j] = s1[i];</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    gets(a);</span><br><span class="line">    vowels(a, b);</span><br><span class="line">    <span class="built_in">puts</span>(b);</span><br><span class="line">    <span class="built_in">putchar</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>学生查询</title>
    <url>/2020/11/25/%E5%AD%A6%E7%94%9F%E6%9F%A5%E8%AF%A2/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入n个学生的信息，每行包括学号、姓名、性别和年龄，每一个属性使用空格分开。最后再输入一学号，将该学号对应的学生信息输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>测试数据有多组，第一行为样例数m。对于每个样例，第一行为学生人数n(n不超过20)，加下来n行每行4个整数分别表示学号、姓名、性别和年龄，最后一行表示查询的学号。</p>
<p><strong><em>输出格式：</em></strong><br>输出m行，每行表示查询的学生信息，格式参见样例。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1<br>4<br>1 李江 男 21<br>2 刘唐 男 23<br>3 张军 男 19<br>4 王娜 女 19<br>2</p>
<p><strong><em>输出样例：</em></strong><br>2 刘唐 男 23</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">    <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">char</span> name[<span class="number">20</span>];</span><br><span class="line">    <span class="keyword">char</span> sex[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> number;</span><br><span class="line">&#125; stu[<span class="number">20</span>];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %s %s %d&quot;</span>, &amp;stu[j].id, &amp;stu[j].name, &amp;stu[j].sex, &amp;stu[j].number);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == stu[i].id)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %s %s %d\n&quot;</span>, stu[i].id, stu[i].name, stu[i].sex, stu[i].number);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>查找元素</tag>
        <tag>待完成</tag>
      </tags>
  </entry>
  <entry>
    <title>打印日期</title>
    <url>/2020/11/26/%E6%89%93%E5%8D%B0%E6%97%A5%E6%9C%9F/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>给出年分m和一年中的第n天，算出第n天是几月几号。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入包括两个整数y(1&lt;=y&lt;=3000)，n(1&lt;=n&lt;=366)。</p>
<p><strong><em>输出格式：</em></strong><br>可能有多组测试数据，对于每组数据，按 yyyy-mm-dd的格式将输入中对应的日期打印出来。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>2013 60<br>2012 300<br>2011 350<br>2000 211</p>
<p><strong><em>输出样例：</em></strong><br>2013-03-01<br>2012-10-26<br>2011-12-16<br>2000-07-29</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">bool</span> isyear(<span class="built_in">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (n % <span class="number">400</span> == <span class="number">0</span>) || (n % <span class="number">100</span> != <span class="number">0</span> &amp;&amp; n % <span class="number">4</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">28</span>, <span class="number">29</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> time, m = <span class="number">1</span>, i = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">int</span> conut, j = <span class="number">1</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;time, &amp;conut);</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= conut)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i == month[m][isyear(time)] + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            m++;</span><br><span class="line">            i = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        j++;</span><br><span class="line">        i++;</span><br><span class="line">    &#125;</span><br><span class="line">    i--;</span><br><span class="line">    printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, time, m, i);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>待完成</tag>
        <tag>日期处理</tag>
      </tags>
  </entry>
  <entry>
    <title>字符串逆序存放</title>
    <url>/2020/11/27/%E5%AD%97%E7%AC%A6%E4%B8%B2%E9%80%86%E5%BA%8F%E5%AD%98%E6%94%BE/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>写一个函数将一个字符串按反序存放。在主函数中输入一个字符串，通过调用该函数，得到该字符串按反序存放后的字符串，并输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>一行字符串。</p>
<p><strong><em>输出格式：</em></strong><br>输入字符串反序存放后的字符串。单独占一行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>abcd</p>
<p><strong><em>输出样例：</em></strong><br>dcba</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">nx</span><span class="params">(<span class="keyword">char</span> a[<span class="number">10</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">10</span>];</span><br><span class="line">    <span class="keyword">int</span> k = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = a[i];</span><br><span class="line">        <span class="keyword">if</span> (i &gt; k - i - <span class="number">1</span>)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        a[i] = a[k - <span class="number">1</span> - i];</span><br><span class="line">        a[k - <span class="number">1</span> - i] = b[i];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">10</span>];</span><br><span class="line">    gets(a);</span><br><span class="line">    nx(a);</span><br><span class="line">    <span class="built_in">puts</span>(a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>函数</tag>
      </tags>
  </entry>
  <entry>
    <title>害死人不偿命的(3n+1)猜想</title>
    <url>/2020/10/17/%E5%AE%B3%E6%AD%BB%E4%BA%BA%E4%B8%8D%E5%81%BF%E5%91%BD%E7%9A%84(3n+1)%E7%8C%9C%E6%83%B3/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>卡拉兹(Callatz)猜想：<br>对任何一个自然数n，如果它是偶数，那么把它砍掉一半；如果它是奇数，那么把(3n+1)砍掉一半。这样一直反复砍下去，最后一定在某一步得到n=1。卡拉兹在1950年的世界数学家大会上公布了这个猜想，传说当时耶鲁大学师生齐动员，拼命想证明这个貌似很傻很天真的命题，结果闹得学生们无心学业，一心只证(3n+1)，以至于有人说这是一个阴谋，卡拉兹是在蓄意延缓美国数学界教学与科研的进展……<br>我们今天的题目不是证明卡拉兹猜想，而是对给定的任一不超过1000的正整数n，简单地数一下，需要多少步（砍几下）才能得到n=1？</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>每个测试输入包含1个测试用例，即给出自然数n的值。</p>
<p><strong><em>输出格式：</em></strong><br>输出从n计算到1需要的步数。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>3</p>
<p><strong><em>输出样例：</em></strong><br>5</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#include &lt;bits/stdc++.h&gt;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> n, k = <span class="number">0</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (n != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">            n = n / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            n = (<span class="number">3</span> * n + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">        k++;</span><br><span class="line">    &#125;</span><br><span class="line">    printf(<span class="string">&quot;%d\n&quot;</span>, k);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>简单模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>找x</title>
    <url>/2020/11/25/%E6%89%BEx/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入一个数n，然后输入n个数值各不相同，再输入一个值x，输出这个值在这个数组中的下标（从0开始，若不在数组中则输出-1）。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>测试数据有多组，输入n(1&lt;=n&lt;=200)，接着输入n个数，然后输入x。</p>
<p><strong><em>输出格式：</em></strong><br>对于每组输入,请输出结果。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>4<br>1 2 3 4<br>3</p>
<p><strong><em>输出样例：</em></strong><br>2</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, s, k;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">200</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;s);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[j] == s)</span><br><span class="line">        &#123;</span><br><span class="line">            k = j;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, k);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>查找元素</tag>
        <tag>待完成</tag>
      </tags>
  </entry>
  <entry>
    <title>挖掘机技术哪家强</title>
    <url>/2020/11/25/%E6%8C%96%E6%8E%98%E6%9C%BA%E6%8A%80%E6%9C%AF%E5%93%AA%E5%AE%B6%E5%BC%BA/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>为了用事实说明挖掘机技术到底哪家强，PAT组织了一场挖掘机技能大赛。现请你根据比赛结果统计出技术最强的那个学校。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入在第1行给出不超过105的正整数N，即参赛人数。随后N行，每行给出一位参赛者的信息和成绩，包括其所代表的学校的编号（从1开始连续编号）、及其比赛成绩（百分制），中间以空格分隔。</p>
<p><strong><em>输出格式：</em></strong><br>在一行中给出总得分最高的学校的编号、及其总分，中间以空格分隔。题目保证答案唯一，没有并列。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>6<br>3 65<br>2 80<br>1 100<br>2 70<br>3 40<br>3 0</p>
<p><strong><em>输出样例：</em></strong><br>2 150</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100010</span>;</span><br><span class="line"><span class="keyword">int</span> school[maxn] = &#123;<span class="number">0</span>&#125;; <span class="comment">//记录学校总分</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, id, score;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;id, &amp;score);</span><br><span class="line">        school[id] += score; <span class="comment">//累加求总分</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> j = <span class="number">1</span>, <span class="built_in">max</span> = <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (school[i] &gt; <span class="built_in">max</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">max</span> = school[i];</span><br><span class="line">            j = i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d&quot;</span>, j, <span class="built_in">max</span>);</span><br><span class="line">    <span class="comment">/*    sort(school,school+n);</span></span><br><span class="line"><span class="comment">    printf(&quot;%d %d&quot;,id,school[n-1]); */</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>简单模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>数素数</title>
    <url>/2020/11/25/%E6%95%B0%E7%B4%A0%E6%95%B0/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>令 P<sub>i</sub> 表示第 i 个素数。现任给两个正整数 M≤N≤10<sup>4</sup>，请输出 P<sub>M</sub> 到 P<sub>N</sub> 的所有素数。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入在一行中给出 M 和 N，其间以空格分隔。</p>
<p><strong><em>输出格式：</em></strong><br>输出从 PM 到 PN 的所有素数，每 10 个数字占 1 行，其间以空格分隔，但行末不得有多余空格。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>5 27</p>
<p><strong><em>输出样例：</em></strong><br>11 13 17 19 23 29 31 37 41 43<br>47 53 59 61 67 71 73 79 83 89<br>97 101 103</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">isprime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (n &lt;= <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">int</span> sqr = (<span class="keyword">int</span>)<span class="built_in">sqrt</span>(<span class="number">1.0</span> * n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= sqr; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">const</span> <span class="keyword">int</span> maxn = <span class="number">100000000</span>;</span><br><span class="line"><span class="keyword">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> steps = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> prime[maxn];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">find_prime</span><span class="params">(<span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; maxn; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isprime(i) == <span class="literal">true</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            steps++;</span><br><span class="line">            prime[j] = i;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (steps &gt;= n)</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, m;</span><br><span class="line">    <span class="keyword">int</span> c = <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    find_prime(n);</span><br><span class="line">    <span class="keyword">int</span> k = steps;</span><br><span class="line">    j = <span class="number">0</span>;</span><br><span class="line">    steps = <span class="number">0</span>;</span><br><span class="line">    find_prime(m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = k - <span class="number">1</span>; i &lt; steps; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, prime[i]);</span><br><span class="line">        <span class="keyword">if</span> (c % <span class="number">10</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        c++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>数学问题</tag>
      </tags>
  </entry>
  <entry>
    <title>新文章</title>
    <url>/2020/10/15/%E6%96%B0%E6%96%87%E7%AB%A0-1/</url>
    <content><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p><em>练习</em><br><em>练习斜体</em><br><strong>练习斜体</strong><br><strong><em>练习加粗斜体</em></strong><br><del>练习删除线</del><br> <a id="more"></a><br><img src="/images/avatar.jpg" alt="图片描述"><br><a href="https://srp05.github.io/">https://srp05.github.io/</a>  </p>
<hr>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&quot;stdio.h&quot;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">1</span>,b=<span class="number">5</span>;</span><br><span class="line"><span class="keyword">double</span> c;</span><br><span class="line">c=a+b;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%f&quot;</span>,&amp;c);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title>日期差值</title>
    <url>/2020/11/26/%E6%97%A5%E6%9C%9F%E5%B7%AE%E5%80%BC/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>有两个日期，求两个日期之间的天数，如果两个日期是连续的我们规定他们之间的天数为两天。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>有多组数据，每组数据有两行，分别表示两个日期，形式为YYYYMMDD</p>
<p><strong><em>输出格式：</em></strong><br>每组数据输出一行，即日期差值</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>20130101<br>20130105</p>
<p><strong><em>输出样例：</em></strong><br>5</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">bool</span> isyear(<span class="built_in">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (n % <span class="number">400</span> == <span class="number">0</span>) || (n % <span class="number">100</span> != <span class="number">0</span> &amp;&amp; n % <span class="number">4</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> month[<span class="number">13</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">28</span>, <span class="number">29</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> time1, y1, m1, d1;</span><br><span class="line">    <span class="built_in">int</span> time2, y2, m2, d2;</span><br><span class="line">    <span class="keyword">while</span> (scanf(<span class="string">&quot;%d%d&quot;</span>, &amp;time1, &amp;time2) != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (time1 &gt; time2)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">int</span> temp = time1;</span><br><span class="line">            time1 = time2;</span><br><span class="line">            time2 = temp;</span><br><span class="line">        &#125;</span><br><span class="line">        y1 = time1 / <span class="number">10000</span>, m1 = time1 % <span class="number">10000</span> / <span class="number">100</span>, d1 = time1 % <span class="number">100</span>;</span><br><span class="line">        y2 = time2 / <span class="number">10000</span>, m2 = time2 % <span class="number">10000</span> / <span class="number">100</span>, d2 = time2 % <span class="number">100</span>;</span><br><span class="line">        <span class="built_in">int</span> ans = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (y1 &lt; y2 || m1 &lt; m2 || d1 &lt; d2)</span><br><span class="line">        &#123;</span><br><span class="line">            d1++;</span><br><span class="line">            <span class="keyword">if</span> (d1 == month[m1][isyear(y1)] + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                m1++;</span><br><span class="line">                d1 = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (m1 == <span class="number">13</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                y1++;</span><br><span class="line">                m1 = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">        printf(<span class="string">&quot;%d\n&quot;</span>, ans);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>日期处理</tag>
      </tags>
  </entry>
  <entry>
    <title>日期类</title>
    <url>/2020/11/26/%E6%97%A5%E6%9C%9F%E7%B1%BB/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>编写一个日期类，要求按xxxx-xx-xx 的格式输出日期，实现加一天的操作。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入第一行表示测试用例的个数m，接下来m行每行有3个用空格隔开的整数，分别表示年月日。测试数据不会有闰年。</p>
<p><strong><em>输出格式：</em></strong><br>输出m行。按xxxx-xx-xx的格式输出，表示输入日期的后一天的日期。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>2<br>1999 10 20<br>2001 1 31</p>
<p><strong><em>输出样例：</em></strong><br>1999-10-21<br>2001-02-01</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight processing"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">int</span> months[<span class="number">13</span>] = &#123;<span class="number">0</span>, <span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%d%d%d&quot;</span>, &amp;<span class="built_in">year</span>, &amp;<span class="built_in">month</span>, &amp;<span class="built_in">day</span>);</span><br><span class="line">    <span class="built_in">day</span>++;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">day</span> == months[<span class="built_in">month</span>] + <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">month</span>++;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">month</span> == <span class="number">13</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">year</span>++;</span><br><span class="line">            <span class="built_in">month</span> = <span class="number">1</span>;</span><br><span class="line">            <span class="built_in">day</span> = <span class="number">1</span>;</span><br><span class="line">            printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">day</span> = <span class="number">1</span>;</span><br><span class="line">            printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, <span class="built_in">year</span>, <span class="built_in">month</span>, <span class="built_in">day</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>待完成</tag>
        <tag>日期处理</tag>
      </tags>
  </entry>
  <entry>
    <title>最大公约数</title>
    <url>/2020/11/25/%E6%9C%80%E5%A4%A7%E5%85%AC%E7%BA%A6%E6%95%B0/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入两个正整数，求其最大公约数。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>测试数据有多组，每组输入两个正整数。</p>
<p><strong><em>输出格式：</em></strong><br>对于每组输入,请输出其最大公约数。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>49  14</p>
<p><strong><em>输出样例：</em></strong><br>7</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">gcd</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> gcd(y, x % y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, gcd(a, b));</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>待完成</tag>
        <tag>数学问题</tag>
      </tags>
  </entry>
  <entry>
    <title>日期累加</title>
    <url>/2020/11/26/%E6%97%A5%E6%9C%9F%E7%B4%AF%E5%8A%A0/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>设计一个程序能计算一个日期加上若干天后是什么日期。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入第一行表示样例个数m，接下来m行每行四个整数分别表示年月日和累加的天数。</p>
<p><strong><em>输出格式：</em></strong><br>输出m行，每行按yyyy-mm-dd的个数输出。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1<br>2008 2 3 100</p>
<p><strong><em>输出样例：</em></strong><br>2008-05-13</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line"><span class="built_in">bool</span> isyear(<span class="built_in">int</span> n)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">return</span> (n % <span class="number">400</span> == <span class="number">0</span>) || (n % <span class="number">100</span> != <span class="number">0</span> &amp;&amp; n % <span class="number">4</span> == <span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">int</span> months[<span class="number">13</span>][<span class="number">2</span>] = &#123;&#123;<span class="number">0</span>, <span class="number">0</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">28</span>, <span class="number">29</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;, &#123;<span class="number">30</span>, <span class="number">30</span>&#125;, &#123;<span class="number">31</span>, <span class="number">31</span>&#125;&#125;;</span><br><span class="line"><span class="built_in">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">int</span> year, month, day, n, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">    scanf(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day, &amp;n);</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= n)</span><br><span class="line">    &#123;</span><br><span class="line">        j++;</span><br><span class="line">        day++;</span><br><span class="line">        <span class="keyword">if</span> (day == months[month][isyear(year)] + <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            month++;</span><br><span class="line">            <span class="keyword">if</span> (month == <span class="number">13</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                year++;</span><br><span class="line">                month = <span class="number">1</span>;</span><br><span class="line">                day = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (j == n)</span><br><span class="line">                    printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                day = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (j == n)</span><br><span class="line">                    printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (j == n)</span><br><span class="line">                printf(<span class="string">&quot;%04d-%02d-%02d\n&quot;</span>, year, month, day);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>待完成</tag>
        <tag>日期处理</tag>
      </tags>
  </entry>
  <entry>
    <title>沙漏图形 tri2str [1*+]</title>
    <url>/2020/11/25/%E6%B2%99%E6%BC%8F%E5%9B%BE%E5%BD%A2-tri2str-1/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入n，输出正倒n层星号三角形。首行顶格，星号间有一空格，效果见样例</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入样例：</em></strong><br>3</p>
<p><strong><em>输出样例：</em></strong>  </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line"><span class="bullet">*</span> <span class="emphasis">* *</span></span><br><span class="line"><span class="bullet"> *</span> <span class="emphasis">* </span></span><br><span class="line"><span class="emphasis">  *</span></span><br><span class="line"><span class="bullet"> *</span> <span class="emphasis">* </span></span><br><span class="line"><span class="emphasis">*</span> <span class="emphasis">* *</span></span><br></pre></td></tr></table></figure>
<p>数据规模 1&lt;= n &lt;=50</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= (i - <span class="number">1</span>); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= n - i + <span class="number">1</span>; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= (n - i); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= i; k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;* &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>图形输出</tag>
      </tags>
  </entry>
  <entry>
    <title>有序插入</title>
    <url>/2020/11/27/%E6%9C%89%E5%BA%8F%E6%8F%92%E5%85%A5/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>有一个已排好序的数组，要求输入一个数后，按原来排序的规律将它插入到数组中。</p>
<p>假设数组长度为10，数组中前9个数（这9个数要求从键盘上输入，输入时要满足自小到大的输入顺序）已经按从小到大进行排序。</p>
<p>然后再从键盘上输入一个整数，将此整数插入到前有序的9个数中，使得最终的10个数依然是从小到大有序的。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>第一行输入以空格分隔的9个整数数，要求按从小到大的顺序输入。<br>第二行输入一个整数</p>
<p><strong><em>输出格式：</em></strong><br>从小到大输出这10个数，每个数一行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1 11 21 31 41 51 61 71 81<br>45</p>
<p><strong><em>输出样例：</em></strong><br>1<br>11<br>21<br>31<br>41<br>45<br>51<br>61<br>71<br>81</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">10</span>];</span><br><span class="line">    <span class="built_in">memset</span>(a, <span class="number">0</span>, <span class="keyword">sizeof</span>(a));</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> k;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &lt; a[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">9</span>; j &gt; i; j--)</span><br><span class="line">            &#123;</span><br><span class="line">                a[j] = a[j - <span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">            a[i] = k;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (k &gt; a[<span class="number">9</span>])</span><br><span class="line">        &#123;</span><br><span class="line">            a[<span class="number">9</span>] = k;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
  <entry>
    <title>统计同成绩学生人数</title>
    <url>/2020/11/25/%E7%BB%9F%E8%AE%A1%E5%90%8C%E6%88%90%E7%BB%A9%E5%AD%A6%E7%94%9F%E4%BA%BA%E6%95%B0/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>读入N名学生的成绩，将获得某一给定分数的学生人数输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>测试输入包含若干测试用例，每个测试用例的格式为</p>
<p>第1行：N<br>第2行：N名学生的成绩，相邻两数字用一个空格间隔。<br>第3行：给定分数</p>
<p>当读到N=0时输入结束。其中N不超过1000，成绩分数为（包含）0到100之间的一个整数。</p>
<p><strong><em>输出格式：</em></strong><br>对每个测试用例，将获得给定分数的学生人数输出。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>4<br>70 80 90 100<br>80<br>3<br>65 75 85<br>55<br>5<br>60 90 90 90 85<br>90<br>0</p>
<p><strong><em>输出样例：</em></strong><br>1<br>0<br>3</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, score[<span class="number">1001</span>], k, ans;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;score[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k == score[i])</span><br><span class="line">        &#123;</span><br><span class="line">            ans++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>查找元素</tag>
        <tag>待完成</tag>
      </tags>
  </entry>
  <entry>
    <title>等腰梯形</title>
    <url>/2020/11/25/%E7%AD%89%E8%85%B0%E6%A2%AF%E5%BD%A2/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>请输入高度h，输入一个高为h，上底边长为h 的等腰梯形（例如h=4，图形如下）。</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">   <span class="strong">****</span></span><br><span class="line">  <span class="strong">****</span><span class="strong">**</span></span><br><span class="line"><span class="strong"> **</span><span class="strong">****</span><span class="strong">**</span></span><br><span class="line"><span class="strong">**</span><span class="strong">****</span><span class="strong">****</span></span><br></pre></td></tr></table></figure>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入第一行表示样例数m，接下来m行每行一个整数h，h不超过10。</p>
<p><strong><em>输出格式：</em></strong><br>对应于m个case输出要求的等腰梯形。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>1<br>4</p>
<p><strong><em>输出样例：</em></strong>  </p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">   <span class="strong">****</span></span><br><span class="line">  <span class="strong">****</span><span class="strong">**</span></span><br><span class="line"><span class="strong"> **</span><span class="strong">****</span><span class="strong">**</span></span><br><span class="line"><span class="strong">**</span><span class="strong">****</span><span class="strong">****</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;h);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= h - i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= h + <span class="number">2</span> * (i - <span class="number">1</span>); k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>图形输出</tag>
      </tags>
  </entry>
  <entry>
    <title>跟奥巴马一起编程</title>
    <url>/2020/11/25/%E8%B7%9F%E5%A5%A5%E5%B7%B4%E9%A9%AC%E4%B8%80%E8%B5%B7%E7%BC%96%E7%A8%8B/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>美国总统奥巴马不仅呼吁所有人都学习编程，甚至以身作则编写代码，成为美国历史上首位编写计算机代码的总统。2014 年底，为庆祝“计算机科学教育周”正式启动，奥巴马编写了很简单的计算机代码：在屏幕上画一个正方形。现在你也跟他一起画吧！</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入在一行中给出正方形边长 N（3≤N≤20）和组成正方形边的某种字符 C，间隔一个空格。</p>
<p><strong><em>输出格式：</em></strong><br>输出由给定字符 C 画出的正方形。但是注意到行间距比列间距大，所以为了让结果看上去更像正方形，我们输出的行数实际上是列数的 50%（四舍五入取整）。</p>
<hr>
<p><strong><em>输入样：</em></strong><br>10 a</p>
<p><strong><em>输出样例：</em></strong><br>aaaaaaaaaa<br>a　　　　 a<br>a　　　　 a<br>a　　　　 a<br>aaaaaaaaaa</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight perl"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;cstdio&gt;</span></span><br><span class="line"><span class="keyword">int</span> main()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">s</span>, row, col;</span><br><span class="line">    scanf(<span class="string">&quot;%d %c&quot;</span>, &amp;col, &amp;<span class="keyword">s</span>);</span><br><span class="line">    <span class="keyword">if</span> (col % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">        row = col / <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        row = col / <span class="number">2</span>;</span><br><span class="line">    +<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="keyword">s</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; row - <span class="number">2</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="keyword">s</span>);</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; col - <span class="number">2</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;%c\n&quot;</span>, <span class="keyword">s</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; col; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">printf</span>(<span class="string">&quot;%c&quot;</span>, <span class="keyword">s</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>图形输出</tag>
      </tags>
  </entry>
  <entry>
    <title>输出梯形</title>
    <url>/2020/11/25/%E8%BE%93%E5%87%BA%E6%A2%AF%E5%BD%A2/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>输入一个高度h，输出一个高为h，上底边为h的梯形。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>一个整数h(1&lt;=h&lt;=1000)。</p>
<p><strong><em>输出格式：</em></strong><br>h所对应的梯形。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>5</p>
<p><strong><em>输出样例：</em></strong>  </p>
<figure class="highlight stata"><table><tr><td class="code"><pre><span class="line"><span class="comment">        *****  </span></span><br><span class="line"><span class="comment">      *******  </span></span><br><span class="line"><span class="comment">    *********  </span></span><br><span class="line"><span class="comment">  ***********  </span></span><br><span class="line"><span class="comment">*************</span></span><br></pre></td></tr></table></figure>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> h;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;h);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= h; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= h + <span class="number">2</span> * (h - <span class="number">1</span>) - h - <span class="number">2</span> * (i - <span class="number">1</span>); j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">1</span>; k &lt;= h + <span class="number">2</span> * (i - <span class="number">1</span>); k++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>图形输出</tag>
      </tags>
  </entry>
  <entry>
    <title>锤子剪刀布</title>
    <url>/2020/11/25/%E9%94%A4%E5%AD%90%E5%89%AA%E5%88%80%E5%B8%83/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>大家应该都会玩“锤子剪刀布”的游戏：两人同时给出手势，胜负规则如图所示：<br><img src="/images/20131223134945_54426.jpg" alt="图片描述"><br>现给出两人的交锋记录，请统计双方的胜、平、负次数，并且给出双方分别出什么手势的胜算最大。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入第1行给出正整数N（&lt;=105），即双方交锋的次数。随后N行，每行给出一次交锋的信息，即甲、乙双方同时给出的的手势。C代表“锤子”、J代表“剪刀”、B代表“布”，第1个字母代表甲方，第2个代表乙方，中间有1个空格。</p>
<p><strong><em>输出格式：</em></strong><br>输出第1、2行分别给出甲、乙的胜、平、负次数，数字间以1个空格分隔。第3行给出两个字母，分别代表甲、乙获胜次数最多的手势，中间有1个空格。如果解不唯一，则输出按字母序最小的解。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>10<br>C&nbsp; &nbsp;J<br>J&nbsp; &nbsp; B<br>C&nbsp; &nbsp;B<br>B&nbsp; &nbsp;B<br>B&nbsp; &nbsp;C<br>C&nbsp; &nbsp;C<br>C&nbsp; &nbsp;B<br>J&nbsp; &nbsp; B<br>B&nbsp; &nbsp;C<br>J&nbsp; &nbsp;  J </p>
<p><strong><em>输出样例：</em></strong><br>5 3 2<br>2 3 5<br>B&nbsp; &nbsp;B</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> n, a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>, b1 = <span class="number">0</span>, b2 = <span class="number">0</span>, b3 = <span class="number">0</span>;</span><br><span class="line"> <span class="comment">/* char a=&#x27;C&#x27;;</span></span><br><span class="line"><span class="comment">    char b=&#x27;B&#x27;;</span></span><br><span class="line"><span class="comment">    char c=&#x27;J&#x27;;</span></span><br><span class="line"><span class="comment">    char e=&#x27;C&#x27;;</span></span><br><span class="line"><span class="comment">    char f=&#x27;B&#x27;;</span></span><br><span class="line"><span class="comment">    char g=&#x27;J&#x27;; */</span></span><br><span class="line">    <span class="keyword">char</span> s[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%c %c&quot;</span>, &amp;a[i], &amp;b[i]);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (a[i] == b[i])</span><br><span class="line">        &#123;</span><br><span class="line">            a2++;</span><br><span class="line">            b2++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ((a[i] == <span class="string">&#x27;C&#x27;</span> &amp;&amp; b[i] == <span class="string">&#x27;J&#x27;</span>) || (a[i] == <span class="string">&#x27;J&#x27;</span> &amp;&amp; b[i] == <span class="string">&#x27;B&#x27;</span>) || (a[i] == <span class="string">&#x27;B&#x27;</span> &amp;&amp; b[i] == <span class="string">&#x27;C&#x27;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            a1++;</span><br><span class="line">            b3++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            b1++;</span><br><span class="line">            a3++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, a1, a2, a3);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d %d %d\n&quot;</span>, b1, b2, b3);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>待完成</tag>
        <tag>简单模拟</tag>
      </tags>
  </entry>
  <entry>
    <title>解密</title>
    <url>/2020/11/27/%E8%A7%A3%E5%AF%86/</url>
    <content><![CDATA[<p><strong><em>题目描述：</em></strong><br>有一行电文，已按如下规律译成密码：<br>A–&gt;Z        a–&gt;z<br>B–&gt;Y        b–&gt;y<br>C–&gt;X        c–&gt;x<br>……          ……<br>即第一个字母变成第26个字母，第i个字母变成第（26-i+1)个字母，非字母字符不变。要求根据密码译回原文，并输出。</p>
<a id="more"></a> 

<hr>
<p><strong><em>输入格式：</em></strong><br>输入一行密文</p>
<p><strong><em>输出格式：</em></strong><br>解密后的原文，单独占一行。</p>
<hr>
<p><strong><em>输入样例：</em></strong><br>ZYX123zyx</p>
<p><strong><em>输出样例：</em></strong><br>ABC123abc</p>
<hr>
<p><strong><em>train of thought：</em></strong></p>
<p><strong><em>code:</em></strong></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">100</span>];</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">27</span>];</span><br><span class="line">    b[<span class="number">0</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">27</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        b[i] = <span class="string">&#x27;A&#x27;</span> + i - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">char</span> c[<span class="number">27</span>];</span><br><span class="line">    c[<span class="number">0</span>] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; <span class="number">27</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] = <span class="string">&#x27;a&#x27;</span> + i - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    gets(a);</span><br><span class="line">    <span class="keyword">int</span> k = <span class="built_in">strlen</span>(a);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&#x27;0&#x27;</span> &lt;= a[i] &amp;&amp; a[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">            a[i] = a[i];</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&#x27;A&#x27;</span> &lt;= a[i] &amp;&amp; a[i] &lt;= <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">1</span>; j &lt; <span class="number">27</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i] == b[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    a[i] = b[-j + <span class="number">26</span> + <span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&#x27;a&#x27;</span> &lt;= a[i] &amp;&amp; a[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">27</span>; j++)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> (a[i] == c[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    a[i] = c[-j + <span class="number">26</span> + <span class="number">1</span>];</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>算法笔记</category>
      </categories>
      <tags>
        <tag>数组</tag>
      </tags>
  </entry>
</search>
